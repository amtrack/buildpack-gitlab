#!/usr/bin/env bash
# See README.md for info on running these tests.

testDetectWithGitlabYmlExample() {
	detect "gitlab-yml-example"
	assertCaptured "GitLab"
	assertCapturedSuccess
}

testDetectWithoutGitlabYmlExample() {
	detect "no-gitlab-yml-example"
	assertCapturedError 1 ""
}

testCompileWithoutRedisURL() {
	compile "no-redis-url"
	assertCapturedError 1 "No supporting environment detected"
}

testLatestStable() {
	export REDIS_URL=redis://localhost:6379
	compile "latest_stable"
	assertCaptured "Installing required packages"
	assertCaptured "Configuring git user"
	assertCaptured "Patching gitlab-shell/lib/gitlab_config.rb"
	assertCaptured "Patching gitlab-shell/lib/gitlab_init.rb"
	assertCaptured "Patching config/initializers/4_sidekiq.rb"
	assertCaptured "Patching config/environments/production.rb"
	assertCaptured "Finished building GitLab"
	assertCapturedSuccess
}

# testEnvDirNotImported() {
# 	compile "gitlab-yml-example"
# 	assertNotCaptured "Exporting config vars to environment"
# 	assertCapturedSuccess
# }

# testEnvDirExported() {
# 	env_dir=$(mktmpdir)
# 	echo "chicken" > $env_dir/birds
# 	echo "koi" > $env_dir/fish
# 	compile "gitlab-yml-example" "$(mktmpdir)" $env_dir
# 	assertCaptured "Exporting config vars to environment"
# 	assertCapturedSuccess
# }

# Utils

pushd $(dirname 0) >/dev/null
bp_dir=$(pwd)
popd >/dev/null

source "$bp_dir/vendor/test-utils/test-utils"

mktmpdir() {
	dir=$(mktemp -t testXXXXX)
	rm -rf $dir
	mkdir $dir
	echo $dir
}

detect() {
	capture "$bp_dir/bin/detect" "$bp_dir/test/$1"
}

compile_dir=""

compile() {
	compile_dir=$(mktmpdir)
	if [ -z $2 ]; then
		cache_dir=$2
	else
		cache_dir=$(mktmpdir)
	fi
	cp -r "$bp_dir/test/$1/." "$compile_dir"
	capture "$bp_dir/bin/compile" "$compile_dir" "$cache_dir" "$3"
}

assertFile() {
	assertEquals "$1" "$(cat $compile_dir/$2)"
}

oneTimeSetUp() {
	$bp_dir/bin/test-setup
}

source "$bp_dir/vendor/shunit2/shunit2"
